#!/bin/bash
# constants
BEGIN='['
END=']'
CHAR='#'
LENGTH=50

# main function for this program
function prog {
    numHash=$(echo "scale=3; $1/100*$LENGTH" | bc)
    numHash="${numHash%.*}"
    progress_bar=$BEGIN
    for i in `seq 1 $LENGTH`
    do
        if (( i <= numHash ))
        then
            progress_bar+="$CHAR"
        else
            progress_bar+="_"
        fi
    done
    progress_bar+="$END($1%)"
    echo -ne "$progress_bar\r"
}
# parse arguments
arguments=()
while [ $# -gt 0 ]
do
    key="$1"
    case $key in
        -d|--demo)
            for i in `seq 1 100`
            do
                prog $i
            done
            echo -ne "\n"
            exit
        ;;
        -h|--help)
            echo "Usage:"
            echo "progress [num job done] [total jobs] [optional arguments]..."
            echo "-d, --demo Show a dynamic progress bar demo growing from 0% to 100%"
            echo "-h, --help Show help info"
            echo "-b, --begin Begin character of progress bar, default: '['"
            echo "-e, --end End character of progress bar, default: ']'"
            echo "-c,--char Characters made up progress bar, default: '#'"
            echo "-l, --length Length of progress bar, default: 50"
            exit
        ;;
        -b|--begin) # optional: begin with
            BEGIN="$2"
            shift # past argument
            shift # past value
        ;;
        -e|--end)   # optional: end with
            END="$2"
            shift # past argument
            shift # past value
        ;;
        -c|--char)  # optional: char of progress
            CHAR="$2"
            shift # past argument
            shift # past value
        ;;
        -l|--length) # optional: length of progress bar in terms of chars
            LENGTH="$2"
            shift # past argument
            shift # past value
        ;;
        *)    
            # the rest options: num of job done and total jobs, used to calculate progress
            arguments+=("$1") # save it in an array for later
            shift # past argument
        ;;
    esac
done

set -- "${arguments[@]}" # restore positional parameters

# first argument is job done so far
# second argument is total job
if [ $# -lt 2 ]
then
    echo "Missing Argument, Default (minimum) Usage: progress <done> <total>"
    exit
fi

# calculate length of progress bar (percentage), [0-100]
prog_number=$(echo "scale=2; $1/$2*100" | bc)
prog_number="${prog_number%.*}"

prog $prog_number
if [ $prog_number -eq 100 ]
then
    echo -ne "\n"
fi